name: Build APK (Debug or Release)

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: "Choose build type: debug or release"
        required: true
        default: debug

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git zip unzip openjdk-17-jdk python3-pip \
            libffi-dev libssl-dev libsqlite3-dev libjpeg-dev zlib1g-dev wget
          pip install --upgrade pip
          pip install buildozer cython

      - name: Install Android SDK (AIDL fix)
        run: |
          mkdir -p "$HOME/android-sdk/cmdline-tools"
          cd "$HOME/android-sdk/cmdline-tools"
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
          unzip -q cmdline-tools.zip -d latest
          export ANDROID_HOME="$HOME/android-sdk"
          export PATH="$ANDROID_HOME/cmdline-tools/latest/bin:$PATH"
          yes | sdkmanager --sdk_root="$ANDROID_HOME" --licenses
          sdkmanager --sdk_root="$ANDROID_HOME" \
            "platform-tools" \
            "platforms;android-33" \
            "build-tools;33.0.2" \
            "cmdline-tools;latest"

      - name: Build APK
        run: |
          export ANDROID_HOME="$HOME/android-sdk"
          export PATH="$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/33.0.2:$PATH"
          which aidl || { echo "‚ùå AIDL missing"; exit 1; }
          if [ "${{ github.event.inputs.build_type }}" = "release" ]; then
            buildozer android release
          else
            buildozer android debug
          fi

      - name: Rename & store APK
        run: |
          mkdir -p build-apk
          DATE=$(date +'%Y-%m-%d')
          APK_NAME="DueDateCalculator-${{ github.event.inputs.build_type }}-${GITHUB_RUN_NUMBER}-${DATE}.apk"
          mv bin/*.apk build-apk/$APK_NAME
          echo "‚úÖ APK ready: $APK_NAME"
          echo "üì• Download link: https://github.com/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}#artifacts"

      - uses: actions/upload-artifact@v4
        with:
          name: APK-${{ github.event.inputs.build_type }}
          path: build-apk/*.apk
